// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ozon-task/store/store.go

// Package store is a generated GoMock package.
package store

import (
	reflect "reflect"

	models "github.com/bulatok/ozon-task/internal/ozon-task/models"
	gomock "github.com/golang/mock/gomock"
)

// MockLinksRepo is a mock of LinksRepo interface.
type MockLinksRepo struct {
	ctrl     *gomock.Controller
	recorder *MockLinksRepoMockRecorder
}

// MockLinksRepoMockRecorder is the mock recorder for MockLinksRepo.
type MockLinksRepoMockRecorder struct {
	mock *MockLinksRepo
}

// NewMockLinksRepo creates a new mock instance.
func NewMockLinksRepo(ctrl *gomock.Controller) *MockLinksRepo {
	mock := &MockLinksRepo{ctrl: ctrl}
	mock.recorder = &MockLinksRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinksRepo) EXPECT() *MockLinksRepoMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockLinksRepo) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockLinksRepoMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockLinksRepo)(nil).Close))
}

// Delete mocks base method.
func (m *MockLinksRepo) Delete(originalLink string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", originalLink)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockLinksRepoMockRecorder) Delete(originalLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockLinksRepo)(nil).Delete), originalLink)
}

// Get mocks base method.
func (m *MockLinksRepo) Get(shortLink string) (*models.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", shortLink)
	ret0, _ := ret[0].(*models.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockLinksRepoMockRecorder) Get(shortLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockLinksRepo)(nil).Get), shortLink)
}

// Name mocks base method.
func (m *MockLinksRepo) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockLinksRepoMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockLinksRepo)(nil).Name))
}

// Save mocks base method.
func (m *MockLinksRepo) Save(link *models.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", link)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockLinksRepoMockRecorder) Save(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockLinksRepo)(nil).Save), link)
}
